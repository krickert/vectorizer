<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://www.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.krickert.search</groupId>
    <artifactId>vectorizer</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>${packaging}</packaging>

    <parent>
        <groupId>io.micronaut.platform</groupId>
        <artifactId>micronaut-parent</artifactId>
        <version>4.6.2</version>
        <relativePath/>
    </parent>
    <properties>
        <packaging>jar</packaging>
        <jdk.version>17</jdk.version>
        <release.version>17</release.version>
        <micronaut.version>4.6.2</micronaut.version>
        <micronaut.aot.enabled>false</micronaut.aot.enabled>
        <micronaut.aot.packageName>com.krickert.search.vectorizer.aot.generated</micronaut.aot.packageName>
        <micronaut.test.resources.enabled>true</micronaut.test.resources.enabled>
        <micronaut.runtime>netty</micronaut.runtime>
        <exec.mainClass>com.krickert.search.vectorizer.vectorizer.VectorizerApplication</exec.mainClass>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <pytorch.version>2.4.0</pytorch.version>
        <pytorch.djl>0.30.0</pytorch.djl>
    </properties>
    <name>vectorizer</name>
    <description>Sentence embedding service</description>
    <url>http://github.com/krickert/vectorizer</url>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Kristian Rickert</name>
            <email>krickert@rokkon.com</email>
            <organization>Rokkon</organization>
            <organizationUrl>http://www.rokkon.com</organizationUrl>
        </developer>
    </developers>
    <distributionManagement>
        <repository>
            <id>github</id>
            <name>GitHub krickert Apache Maven Packages</name>
            <url>https://maven.pkg.github.com/krickert/rag-models</url>
        </repository>
    </distributionManagement>
    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>
        <repository>
            <id>github</id>
            <name>GitHub krickert Apache Maven Packages</name>
            <url>https://maven.pkg.github.com/krickert/rag-models</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <profiles>
        <!-- Profile for x86_64 Linux -->
        <profile>
            <id>linux-x86_64</id>
            <activation>
                <property>
                    <name>osAndArch</name>
                    <value>linux-x86_64</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>ai.djl.pytorch</groupId>
                    <artifactId>pytorch-native-cpu</artifactId>
                    <classifier>linux-x86_64</classifier>
                    <scope>runtime</scope>
                    <version>${pytorch.version}</version>
                </dependency>
                <dependency>
                    <groupId>ai.djl.pytorch</groupId>
                    <artifactId>pytorch-native-cpu-precxx11</artifactId>
                    <classifier>linux-x86_64</classifier>
                    <scope>runtime</scope>
                    <version>${pytorch.version}</version>
                </dependency>
            </dependencies>
        </profile>

        <!-- Profile for arm64 Linux -->
        <profile>
            <id>linux-arm64</id>
            <activation>
                <property>
                    <name>osAndArch</name>
                    <value>linux-arm64</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>ai.djl.pytorch</groupId>
                    <artifactId>pytorch-native-cpu-precxx11</artifactId>
                    <classifier>linux-aarch64</classifier>
                    <scope>runtime</scope>
                    <version>${pytorch.version}</version>
                </dependency>
                <dependency>
                    <groupId>ai.djl.pytorch</groupId>
                    <artifactId>pytorch-jni</artifactId>
                    <version>${pytorch.version}-${pytorch.djl}</version>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
        </profile>

        <!-- Profile for Windows -->
        <profile>
            <id>windows</id>
            <activation>
                <property>
                    <name>osAndArch</name>
                    <value>windows</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>ai.djl.pytorch</groupId>
                    <artifactId>pytorch-native-cpu</artifactId>
                    <classifier>win-x86_64</classifier>
                    <scope>runtime</scope>
                    <version>${pytorch.version}</version>
                </dependency>
                <dependency>
                    <groupId>ai.djl.pytorch</groupId>
                    <artifactId>pytorch-native-cu121</artifactId>
                    <classifier>win-x86_64</classifier>
                    <version>${pytorch.version}</version>
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>ai.djl.pytorch</groupId>
                    <artifactId>pytorch-jni</artifactId>
                    <version>${pytorch.version}-${pytorch.djl}</version>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
        </profile>

        <!-- Profile for ARM64 macOS -->
        <profile>
            <id>osx-arm64</id>
            <activation>
                <property>
                    <name>osAndArch</name>
                    <value>osx-arm64</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>ai.djl.pytorch</groupId>
                    <artifactId>pytorch-native-cpu</artifactId>
                    <classifier>osx-aarch64</classifier>
                    <version>${pytorch.version}</version>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
        </profile>

        <!-- Profile to print detected OS and architecture -->
        <profile>
            <id>print-os-arch</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <!--suppress UnresolvedMavenProperty -->
                                        <echo message="Detected OS: ${os.detected.name}"/>
                                        <!--suppress UnresolvedMavenProperty -->
                                        <echo message="Detected Arch: ${os.detected.arch}"/>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <!-- Other Dependencies -->
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-http-client</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-http-server-netty</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-management</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.grpc</groupId>
            <artifactId>micronaut-grpc-runtime</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.serde</groupId>
            <artifactId>micronaut-serde-jackson</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.testresources</groupId>
            <artifactId>micronaut-test-resources-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.krickert.search</groupId>
            <artifactId>search-models</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>io.micronaut.test</groupId>
            <artifactId>micronaut-test-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>4.2.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>consul</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java-util</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.krickert.search</groupId>
            <artifactId>search-models-test-resources</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.validation</groupId>
            <artifactId>micronaut-validation</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.openapi</groupId>
            <artifactId>micronaut-openapi-annotations</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>ai.djl.huggingface</groupId>
            <artifactId>tokenizers</artifactId>
            <version>${pytorch.djl}</version>
        </dependency>
        <dependency>
            <groupId>ai.djl.pytorch</groupId>
            <artifactId>pytorch-model-zoo</artifactId>
            <version>${pytorch.djl}</version>
        </dependency>
        <dependency>
            <groupId>ai.djl.pytorch</groupId>
            <artifactId>pytorch-jni</artifactId>
            <version>${pytorch.version}-${pytorch.djl}</version>
            <scope>runtime</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.7.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>detect</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <execution>
                        <id>detect-os-arch</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <name>osAndArch</name>
                            <!--suppress UnresolvedMavenProperty -->
                            <value>${os.detected.name}-${os.detected.arch}</value>
                            <regex>
                                (^osx-aarch_64)|(^linux-x86_64$)|(^linux-arm64$)|(^win-x86_64$)
                            </regex>
                            <!--suppress UnresolvedMavenProperty -->
                            <replacement>${os.detected.name}-${os.detected.arch}</replacement>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.micronaut.maven</groupId>
                <artifactId>micronaut-maven-plugin</artifactId>
                <configuration>
                    <shared>true</shared>
                    <configFile>aot-${packaging}.properties</configFile>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <!-- Uncomment to enable incremental compilation -->
                    <!-- <useIncrementalCompilation>false</useIncrementalCompilation> -->

                    <annotationProcessorPaths combine.children="append">
                        <path>
                            <groupId>io.micronaut</groupId>
                            <artifactId>micronaut-http-validation</artifactId>
                            <version>${micronaut.core.version}</version>
                        </path>
                        <path>
                            <groupId>io.micronaut.openapi</groupId>
                            <artifactId>micronaut-openapi</artifactId>
                            <version>${micronaut.openapi.version}</version>
                            <exclusions>
                                <exclusion>
                                    <groupId>io.micronaut</groupId>
                                    <artifactId>micronaut-inject</artifactId>
                                </exclusion>
                            </exclusions>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <arg>-Amicronaut.processing.group=com.krickert.search.vectorizer</arg>
                        <arg>-Amicronaut.processing.module=vectorizer</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <configuration>
                    <to>
                        <image>docker.io/krickert/${project.name}:${project.version}</image>
                        <auth>
                            <!--suppress UnresolvedMavenProperty -->
                            <username>${env.DOCKER_USERNAME}</username>
                            <!--suppress UnresolvedMavenProperty -->
                            <password>${env.DOCKER_PASSWORD}</password>
                        </auth>
                    </to>
                    <from>
                        <image>eclipse-temurin:17</image>

                        <platforms>
                        <platform>
                            <architecture>amd64</architecture>
                            <os>linux</os>
                        </platform>
                        <platform>
                            <architecture>arm64</architecture>
                            <os>linux</os>
                        </platform>
                    </platforms>
                    </from>

                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
